"use strict";exports.id=2330,exports.ids=[2330],exports.modules={22330:(e,a,t)=>{t.d(a,{offchainLookup:()=>offchainLookup,offchainLookupSignature:()=>h});var r=t(94993),s=t(54879),o=t(31118),n=t(96653);let OffchainLookupError=class OffchainLookupError extends o.G{constructor({callbackSelector:e,cause:a,data:t,extraData:r,sender:s,urls:o}){super(a.shortMessage||"An error occurred while fetching for an offchain result.",{cause:a,metaMessages:[...a.metaMessages||[],a.metaMessages?.length?"":[],"Offchain Gateway Call:",o&&["  Gateway URL(s):",...o.map(e=>`    ${(0,n.Gr)(e)}`)],`  Sender: ${s}`,`  Data: ${t}`,`  Callback selector: ${e}`,`  Extra data: ${r}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}};let OffchainLookupResponseMalformedError=class OffchainLookupResponseMalformedError extends o.G{constructor({result:e,url:a}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,n.Gr)(a)}`,`Response: ${(0,s.P)(e)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}};let OffchainLookupSenderMismatchError=class OffchainLookupSenderMismatchError extends o.G{constructor({sender:e,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${e}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}};var c=t(76043),i=t(40744),f=t(26932),u=t(47158),d=t(19869),l=t(97372),p=t(12266);let h="0x556f1830",m={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function offchainLookup(e,{blockNumber:a,blockTag:t,data:s,to:o}){let{args:n}=(0,i.p)({data:s,abi:[m]}),[c,p,h,w,y]=n,{ccipRead:b}=e,g=b&&"function"==typeof b?.request?b.request:ccipRequest;try{if(!function(e,a){if(!(0,d.U)(e,{strict:!1}))throw new u.b({address:e});if(!(0,d.U)(a,{strict:!1}))throw new u.b({address:a});return e.toLowerCase()===a.toLowerCase()}(o,c))throw new OffchainLookupSenderMismatchError({sender:c,to:o});let s=await g({data:h,sender:c,urls:p}),{data:n}=await (0,r.RE)(e,{blockNumber:a,blockTag:t,data:(0,l.zo)([w,(0,f.E)([{type:"bytes"},{type:"bytes"}],[s,y])]),to:o});return n}catch(e){throw new OffchainLookupError({callbackSelector:w,cause:e,data:s,extraData:y,sender:c,urls:p})}}async function ccipRequest({data:e,sender:a,urls:t}){let r=Error("An unknown error occurred.");for(let o=0;o<t.length;o++){let n=t[o],i=n.includes("{data}")?"GET":"POST",f="POST"===i?{data:e,sender:a}:void 0;try{let t;let o=await fetch(n.replace("{sender}",a).replace("{data}",e),{body:JSON.stringify(f),method:i});if(t=o.headers.get("Content-Type")?.startsWith("application/json")?(await o.json()).data:await o.text(),!o.ok){r=new c.Gg({body:f,details:t?.error?(0,s.P)(t.error):o.statusText,headers:o.headers,status:o.status,url:n});continue}if(!(0,p.v)(t)){r=new OffchainLookupResponseMalformedError({result:t,url:n});continue}return t}catch(e){r=new c.Gg({body:f,details:e.message,url:n})}}throw r}}};